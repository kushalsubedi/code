name: CI and CD for Frontend Code
on:
  push:
    paths:
      - 'frontend/**'
    branches:
      - dev
      - main
  pull_request:
    paths:
      - 'frontend/**'
    branches:
      - dev
  workflow_dispatch:

permissions:
  contents: write
  id-token: write
  pull-requests: write
env:
  PAGES_REPO: kushalsubedi/kushalsubedi.github.io
  PAGES_TOKEN: ${{ secrets.GH_PAT }}

jobs:
  test_and_gh_page_deployment:
    runs-on: [self-hosted]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      #Check Conventional Commits

      - name: Validate commit message
        run: chmod +x .github/scripts/check_commit.sh && .github/scripts/check_commit.sh
      # Install dependencies and cache it
      - name: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: '22.0.0'
      - name: Install Yarn
        run : |
          npm i -g yarn
      - name: Install deps
        run : |
          cd frontend
          yarn install --frozen-lockfile
          yarn add vite@5.2.10
        env:
          NODE_ENV: development

      - name: Build frontend dist
        run: |
          cd frontend
          yarn build
        env:
          VITE_CLERK_PUBLISHABLE_KEY: ${{secrets.VITE_CLERK_PUBLISHABLE_KEY}}

      - name: Checkout GitHub Pages repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.PAGES_REPO }}
          token: ${{ env.PAGES_TOKEN }}
          path: pages-repo
          ref: main
      - name: Transfer code to gh page
        run: |
          cp -r frontend/dist/. pages-repo/
        shell: bash

      - name: Commit to gh page
        run: |
          cd pages-repo
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

          if git diff --quiet && git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git add .
            git commit -m "Deploy frontend build"
            git push origin main
          fi
        shell: bash
#Create Sem release
  create_semantic_version:
    needs: test_and_gh_page_deployment
    if: github.event_name == 'push' || github.event_name=='workflow_dispatch'
    runs-on: [self-hosted]
    steps:
      - name: checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install Yarn
        run: |
            npm -i g yarn
      - name: Semantic release
        env:
          GITHUB_TOKEN: ${{secrets.GH_PAT}}
        run: npx semantic-release

  build_and_push_docker_image:
    needs: create_semantic_version
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: [self-hosted]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get latest version from tag
        id: version
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          VERSION_NUMBER=${VERSION#v}
          echo "version=$VERSION_NUMBER" >> "$GITHUB_OUTPUT"

      - name: List frontend files
        run: ls -R ./frontend

      - name: Build Docker image (locally before push)
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/frontend-app:v${{ steps.version.outputs.version }} -f ./frontend/Dockerfile ./frontend

      # Trivy scan report
      - name: Download Trivy HTML template
        run: |
          curl -sSL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl -o trivy-template.tpl

      - name: Set up Trivy
        uses: aquasecurity/setup-trivy@v0.2.0
        with:
          version: v0.64.1

      - name: Run Trivy scan and generate HTML
        run: |
          trivy image ${{ secrets.DOCKER_HUB_USERNAME }}/frontend-app:v${{ steps.version.outputs.version }} \
            --format template \
            --template "@trivy-template.tpl" \
            -o scan-frontend.html

      - name: Push Trivy report to GitHub Pages (main only)
        if: github.ref == 'refs/heads/main'
        run: |
          git config --global user.email "ci-bot@github.com"
          git config --global user.name "CI Bot"

          git clone https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ env.PAGES_REPO }} gh-pages-repo
          mkdir -p gh-pages-repo/scan/frontend
          cp scan-frontend.html gh-pages-repo/scan/frontend/scan-frontend.html

          cd gh-pages-repo
          git add .
          git commit -m "chore(report): update Trivy scan report for v${{ steps.version.outputs.version }}" || echo "No changes to commit"
          git push origin main

      # Push Docker image to DockerHub
      - name: Push Docker image on main branch (version + latest)
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/frontend-app:v${{ steps.version.outputs.version }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/frontend-app:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Push Docker image on dev branch (version only)
        if: github.ref == 'refs/heads/dev'
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/frontend-app:v${{ steps.version.outputs.version }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move updated Docker cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Save Docker image to tar file (main only)
        if: github.ref == 'refs/heads/main'
        run: |
          docker save ${{ secrets.DOCKER_HUB_USERNAME }}/frontend-app:v${{ steps.version.outputs.version }} -o frontend-app-v${{ steps.version.outputs.version }}.tar

      - name: Upload image to GitHub Release (main only)
        if: github.ref == 'refs/heads/main'
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          VERSION="v${{ steps.version.outputs.version }}"
          FILE="frontend-app-${VERSION}.tar"
          gh release upload "$VERSION" "$FILE" --repo ${{ github.repository }} --clobber

