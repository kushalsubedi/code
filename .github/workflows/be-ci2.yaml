name: CI and CD for Backend Code

on:
  push:
    paths:
      - 'backend2/**'
    branches:
      - dev
      - main
  pull_request:
    paths:
      - 'backend2/**'
    branches:
      - dev
  workflow_dispatch:


permissions:
  contents: write
  id-token: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate commit message
        run: chmod +x .github/scripts/check_commit.sh && .github/scripts/check_commit.sh

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'yarn'
          cache-dependency-path: frontend/yarn.lock

  create_semantic_version:
    needs: test
    if: github.event_name == 'push' || github.event_name=='workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'yarn'
          cache-dependency-path: frontend/yarn.lock

      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: npx semantic-release

  build_and_push_docker_image:
    needs: create_semantic_version
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PAT }}

      - name: Get latest version from tag
        id: version
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          VERSION_NUMBER=${VERSION#v}
          echo "version=$VERSION_NUMBER" >> "$GITHUB_OUTPUT"

      - name: List backend files
        run: ls -R ./backend2

      - name: Download Trivy HTML template
        run: |
          curl -sSL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl -o trivy-template.tpl

      - name: Set up Trivy
        uses: aquasecurity/setup-trivy@v0.2.0
        with:
          version: v0.64.1

      - name: Build Docker image (locally before scan)
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/backend2:v${{ steps.version.outputs.version }} -f ./backend2/Dockerfile ./backend2

      - name: Run Trivy scan and generate HTML
        run: |
          trivy image ${{ secrets.DOCKER_HUB_USERNAME }}/backend2:v${{ steps.version.outputs.version }} \
            --format template \
            --template "@trivy-template.tpl" \
            -o scan-backend.html

      - name: Push Trivy report to GitHub Pages (main only)
        if: github.ref == 'refs/heads/main'
        run: |
          git config --global user.email "ci-bot@github.com"
          git config --global user.name "CI Bot"
          mkdir gh-pages-repo
          git clone https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }} gh-pages-repo
          mkdir -p gh-pages-repo/scan/backend
          cp scan-backend.html gh-pages-repo/scan/backend/scan-backend.html
          cd gh-pages-repo
          git add .
          git commit -m "chore(report): update Trivy scan report for backend2 v${{ steps.version.outputs.version }}" || echo "No changes to commit"
          git push origin main

      - name: Push Docker image (main version + latest)
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/backend2:v${{ steps.version.outputs.version }} ${{ secrets.DOCKER_HUB_USERNAME }}/backend2:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/backend2:v${{ steps.version.outputs.version }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/backend2:latest

      - name: Push Docker image (dev version only)
        if: github.ref == 'refs/heads/dev'
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/backend2:v${{ steps.version.outputs.version }}

      - name: Save Docker image to tar file (main only)
        if: github.ref == 'refs/heads/main'
        run: |
          docker save ${{ secrets.DOCKER_HUB_USERNAME }}/backend2:v${{ steps.version.outputs.version }} -o backend2-v${{ steps.version.outputs.version }}.tar

      - name: Upload image to GitHub Release (main only)
        if: github.ref == 'refs/heads/main'
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          VERSION="v${{ steps.version.outputs.version }}"
          FILE="backend2-${VERSION}.tar"
          gh release upload "$VERSION" "$FILE" --repo ${{ github.repository }} --clobber


